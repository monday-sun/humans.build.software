---
import DefaultLayout from '../../layouts/DefaultLayout.astro'
import { Breadcrumbs, BreadcrumbsItem, Card } from 'accessible-astro-components'
import { getCollection, render } from 'astro:content'
import type { CollectionEntry } from 'astro:content'
import AuthorDisplay from '../../components/AuthorDisplay.astro'

export async function getStaticPaths() {
  const authors = await getCollection('authors')
  const blogEntries = await getCollection('blog')

  return authors.map((author) => {
    // Get posts by this author
    const authorPosts = blogEntries
      .filter((post) => post.data.author === author.id)
      .sort((a, b) => new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf())

    return {
      params: { author: author.id },
      props: { author, posts: authorPosts },
    }
  })
}

interface Props {
  author: CollectionEntry<'authors'>
  posts: CollectionEntry<'blog'>[]
}

const { author, posts } = Astro.props
const { Content } = await render(author)
---

<DefaultLayout
  title={`${author.data.name} - Author`}
  description={`About ${author.data.name}, author at Humans Build Software`}
>
  <div class="container">
    <div class="mt-12">
      <Breadcrumbs>
        <BreadcrumbsItem href="/" label="Home" />
        <BreadcrumbsItem href="/blog" label="Blog" />
        <BreadcrumbsItem currentPage={true} label={author.data.name} />
      </Breadcrumbs>
    </div>
  </div>

  <section class="my-12">
    <div class="container">
      <AuthorDisplay author={author.data} content={Content} />

      <div class="author-posts">
        <h2 class="mb-6 text-2xl">Posts by {author.data.name}</h2>
        {
          posts.length > 0 ? (
            <ul class="post-grid">
              {posts.map((post) => (
                <li>
                  <Card
                    url={`/blog/${post.id}`}
                    title={post.data.title}
                    footer={`${new Date(post.data.pubDate).toLocaleDateString('en-US', {
                      year: 'numeric',
                      month: 'long',
                      day: 'numeric',
                    })}`}
                  >
                    {post.data.description}
                  </Card>
                </li>
              ))}
            </ul>
          ) : (
            <p>No posts found.</p>
          )
        }
      </div>
    </div>
  </section>
</DefaultLayout>

<style lang="scss">
  .post-grid {
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 2rem;

    @media (min-width: 550px) {
      grid-template-columns: repeat(2, 1fr);
    }

    @media (min-width: 950px) {
      grid-template-columns: repeat(3, 1fr);
    }
  }
</style>
